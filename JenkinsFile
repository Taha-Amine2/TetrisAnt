pipeline {
    agent any

    options {
        skipStagesAfterUnstable()
    }

    environment {
        JAR_FILE = 'Tetris.jar'
        LAST_SUCCESSFUL_BUILD = 'build' // Replace this with the actual job name if needed
    }

    stages {
        stage('Retrieve Artifact') {
            steps {
                script {
                    // Get the last successful build of the specified job
                    def lastBuild = build(job: LAST_SUCCESSFUL_BUILD, propagate: false, wait: true)

                    // Check if the last build was successful
                    if (lastBuild.result == 'SUCCESS') {
                        // Copy the artifact from the last successful build
                        // Make sure to replace 'your-jenkins-url' with the actual URL of your Jenkins instance
                        sh """
                        curl -o ${JAR_FILE} ${JENKINS_URL}/job/${LAST_SUCCESSFUL_BUILD}/lastSuccessfulBuild/artifact/${JAR_FILE}
                        """
                    } else {
                        error("The last successful build was not successful!")
                    }
                }
            }
        }

        stage('Archive Tetris.jar') {
            steps {
                // Archive the JAR file as an artifact
                archiveArtifacts artifacts: "${JAR_FILE}", allowEmptyArchive: false
            }
        }
    }

}